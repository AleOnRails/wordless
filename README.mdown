# Wordless

Wordless is an opionated Wordpress plugin that dramatically speed up and enhances your custom themes creation. Some of its features are:

* A structured, organized and clean theme directory organization taken directly from Rails;
* Ability to write PHP code using the beautiful [Haml templating system](http://haml-lang.com/);
* Ability to write CSS stylesheets using the awesome [Sass syntax](sass-lang.com) and the [Compass framework](http://compass-style.org/);
* Ability to write [Coffeescript](http://jashkenas.github.com/coffee-script/) instead of the boring, oldish Javascript;
* A growing set of handy and documented helper functions ready to be used within your views;

## Wordless Theme anatomy

That's a typical Wordless theme directory structure:

	your_theme_dir
	├── config
	│   ├── helpers
	│   ├── initializers
	│   └── locales
	├── public
	│   ├── assets
	│   │   ├── javascripts
	│   │   └── stylesheets
	│   └── images
	├── theme
	│   ├── assets
	│   │   ├── javascripts
	│   │   └── stylesheets
	│   └── views
    │       └── layouts
	└── tmp

Let's see in detail what is the purpose of all those directories:

### Theme Views (`theme/views/*.haml` files)

That's the directory where you'll code most of the time. Here you can create a template for each main page of your theme, using Haml syntax. Here's what could be a typical example for a blog archive page:

```haml
%h2 Blog archive
%ul.blog_archive
  - while (have_posts())
    - the_post()
    %li.post= link_to(get_the_title(), get_permalink())
```

Wordless uses [Phamlp](http://code.google.com/p/phamlp/) for your views, a PHP port of the Haml ruby gem. In this little snippet, please note the following:

* There's no layout, just content: the layout of the page is stored in a secondary file, placed in the `theme/views/layouts` directory;
* We're already using one of the 40+ Wordless helper functions, `link_to()`, to create the link in a clean, polished way. Don't you already feel better?

##### Layouts (`theme/views/layouts` directory)



##### Helpers (`config/helpers/*.php` files)

Helpers are basically small functions that can be called in your views to help keep your code stay DRY. Create as many helper files and functions as you want and put them in this directory, they will all be required within your views, together with the [default Wordless helpers](https://github.com/welaika/wordless/tree/master/wordless/helpers).

##### Initializers (`config/initializers/*.php` files)

Once upon a time there was the ugly functions.php, where you would drop every bit of code external to the theme views (custom post types, taxonomies, wordpress filters and hooks). That was just terrible, isn't it? 
Wordless let you split you code into many modular initializer files, and a lot more.

		│   │   ├── custom_post_types.php
		│   │   ├── hooks.php
		│   │   ├── menus.php
		│   │   ├── wordless_preferences.php
		│   │   └── thumbnail_sizes.php

##### Locale files (`config/locales` directory)

Just drop all your theme locale files in this directory. Wordless will take care of the rest.

##### Your static assets (`public` directory)

Put all your static assets -- that is your images plus your CSS and Javascript files -- inside the `public` directory. Then import them like this:

	/ Javascripts 
	= include_javascript("jquery")

    / Stylesheets
    = include_stylesheet("application")

## Requirements

Your development machine needs the following executables:

* [NodeJS](http://nodejs.org/) (`brew install node`);
* [npm](http://npmjs.org/) (`curl http://npmjs.org/install.sh | sh`);
* [Coffeescript](http://jashkenas.github.com/coffee-script/) (`npm install -g coffee-script`);
* Ruby and the [compass](https://github.com/chriseppstein/compass) gem (`gem install compass`)

The production machine doesn't need any extra-dependencies, as all the assets gets cached by Wordless.